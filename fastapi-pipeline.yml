pr: none

trigger:
  branches:
    include:
      - present-3.0.0

variables:
  azureServiceConnectionId: 'rg-dev-SCN'
  webAppName: 'python-backend-app-dev'
  resourceGroupName: 'rg-dev'
  vmImageName: 'dev-agent-pool'
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      name: $(vmImageName)
    steps:
    - script: |
        python3.11 -m ensurepip --upgrade
        python3.11 -m pip install --upgrade pip
        python3.11 --version
      displayName: 'Setup Python 3.11'

    - script: |
        python3.11 -m venv antenv
        source antenv/bin/activate
        python --version
        pip install --upgrade pip
        # Add a specific version for setup or replace with a valid dependency if required
        pip install setup==65.5.1
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeploymentJob
    pool:
      name: $(vmImageName)
    steps:
    - download: current
      artifact: drop
      displayName: 'Download Artifacts'

    - task: AzureWebApp@1
      displayName: 'Deploy Azure Web App : $(webAppName)'
      inputs:
        azureSubscription: $(azureServiceConnectionId)
        appName: $(webAppName)
        resourceGroupName: $(resourceGroupName)
        package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
        deploymentMethod: 'zipDeploy'
        takeAppOfflineFlag: true

    - task: AzureAppServiceManage@0
      inputs:
        azureSubscription: $(azureServiceConnectionId)
        Action: 'Restart Azure App Service'
        WebAppName: $(webAppName)
